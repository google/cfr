name: Fleet Routing App CI
on:
  push:
jobs:
  # detect changes
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'application/backend/**'
          frontend:
            - 'application/frontend/**'

  # backend checks
  check-backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: application/backend

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js v16 LTS
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - run: npm ci
    - run: npm run lint
    - run: npm test

  # frontend checks
  check-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: application/frontend

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js v16 LTS
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - run: npm ci
    - run: npm run lint
    - run: npm run style-check
    - run: Xvfb :99 &
    - run: npm run test -- --watch=false --progress=false --browsers=ChromeHeadlessCI --code-coverage
      env:
        DISPLAY: ':99'

  # build container image
  build-container:
    needs:
    - check-backend
    - check-frontend

    runs-on: ubuntu-latest
    container: google/cloud-sdk

    steps:
      - run: echo $GCLOUD_SERVICE_ACCOUNT_JSON | base64 -d > /tmp/service-account.json
      - run: gcloud auth activate-service-account --key-file=/tmp/service-account.json
      - run: make build

  # push container image

  # terraform checks
